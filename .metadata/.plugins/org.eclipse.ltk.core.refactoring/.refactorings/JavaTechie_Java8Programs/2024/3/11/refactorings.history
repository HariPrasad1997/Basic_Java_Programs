<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;split&apos; from expression &apos;input.split(input)&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;split&apos;&#x0A;- Destination method: &apos;programs_Java8.FindEachOccurancesOfCharacterInString.main(...)&apos;&#x0A;- Variable expression: &apos;input.split(input)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;split&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindEachOccurancesOfCharacterInString.java" name="split" replace="true" selection="155 19" stamp="1710168677099" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(s -&gt; s))&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;programs_Java8.FindEachOccurancesOfCharacterInString.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(s -&gt; s))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindEachOccurancesOfCharacterInString.java" name="collect" replace="true" selection="217 70" stamp="1710168917924" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting()))&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;programs_Java8.FindEachOccurancesOfCharacterInString.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting()))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindEachOccurancesOfCharacterInString.java" name="collect" replace="true" selection="472 105" stamp="1710172629193" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;distinct&apos; from expression &apos;Arrays.stream(input.split(&quot;&quot;)).distinct()&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;distinct&apos;&#x0A;- Destination method: &apos;programs_Java8.FindDuplicatesFromGivenString.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(input.split(&quot;&quot;)).distinct()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;distinct&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindDuplicatesFromGivenString.java" name="distinct" replace="true" selection="170 42" stamp="1710172974966" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting())).entrySet().stream().filter(x -&gt; !(x.getValue() &gt; 1)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;programs_Java8.FindDuplicatesFromGivenString.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting())).entrySet().stream().filter(x -&gt; !(x.getValue() &gt; 1)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindDuplicatesFromGivenString.java" name="collect" replace="true" selection="248 205" stamp="1710173851161" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting())).entrySet().stream().filter(x -&gt; x.getValue() &gt; 1).map(Map.Entry::getKey).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;programs_Java8.FindDuplicatesFromGivenString.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting())).entrySet().stream().filter(x -&gt; x.getValue() &gt; 1).map(Map.Entry::getKey).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindDuplicatesFromGivenString.java" name="collect" replace="true" selection="383 210" stamp="1710174250703" varType="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;collect&apos; in &apos;programs_Java8.FindDuplicatesFromGivenString.main(...)&apos; to &apos;duplicateElements&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Original element: &apos;programs_Java8.FindDuplicatesFromGivenString.main(String[]).collect&apos;&#x0A;- Renamed element: &apos;collect&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;collect&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;programs_Java8{FindDuplicatesFromGivenString.java[FindDuplicatesFromGivenString~main~\[QString;@collect!416!656!429!435!QList\&lt;QString;&gt;;!0!false" name="duplicateElements" references="true" stamp="1710174471793" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;uniqueElements&apos; from expression &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting())).entrySet().stream().filter(x -&gt; x.getValue() == 1).map(Map.Entry::getKey).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;uniqueElements&apos;&#x0A;- Destination method: &apos;programs_Java8.FindDuplicatesFromGivenString.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting())).entrySet().stream().filter(x -&gt; x.getValue() == 1).map(Map.Entry::getKey).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;uniqueElements&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindDuplicatesFromGivenString.java" name="uniqueElements" replace="true" selection="743 214" stamp="1710174486497" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;elementOccurances&apos; from expression &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting()))&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;elementOccurances&apos;&#x0A;- Destination method: &apos;programs_Java8.FindDuplicatesFromGivenString.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting()))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;elementOccurances&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindDuplicatesFromGivenString.java" name="elementOccurances" replace="true" selection="383 105" stamp="1710174628351" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;findFirst&apos; from expression &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting())).entrySet().stream().filter(x -&gt; x.getValue() &gt; 1).findFirst()&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;findFirst&apos;&#x0A;- Destination method: &apos;programs_Java8.FindDuplicatesFromGivenString.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(input.split(&quot;&quot;)).collect(Collectors.groupingBy(Function.identity(),Collectors.counting())).entrySet().stream().filter(x -&gt; x.getValue() &gt; 1).findFirst()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;findFirst&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindDuplicatesFromGivenString.java" name="findFirst" replace="true" selection="1138 172" stamp="1710175154870" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Arrays.stream(numbers).boxed().sorted().collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;programs_Java8.FindSecondHighestNumberFromArray.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(numbers).boxed().sorted().collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindSecondHighestNumberFromArray.java" name="collect" replace="true" selection="224 69" stamp="1710176067041" varType="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;collect&apos; in &apos;programs_Java8.FindSecondHighestNumberFromArray.main(...)&apos; to &apos;secondHighestElement&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Original element: &apos;programs_Java8.FindSecondHighestNumberFromArray.main(String[]).collect&apos;&#x0A;- Renamed element: &apos;collect&apos;&#x0A;- Update references to refactored element" description="Rename local variable &apos;collect&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;programs_Java8{FindSecondHighestNumberFromArray.java[FindSecondHighestNumberFromArray~main~\[QString;@collect!217!325!225!231!QInteger;!0!false" name="secondHighestElement" references="true" stamp="1710176484909" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;secondLowest&apos; from expression &apos;Arrays.stream(numbers).boxed().sorted().skip(1).findFirst().get()&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;secondLowest&apos;&#x0A;- Destination method: &apos;programs_Java8.FindSecondHighestNumberFromArray.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(numbers).boxed().sorted().skip(1).findFirst().get()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;secondLowest&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindSecondHighestNumberFromArray.java" name="secondLowest" replace="true" selection="415 66" stamp="1710176595029" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;longestString&apos; from expression &apos;Arrays.stream(inputString).reduce((s1,s2) -&gt; s1.length() &gt; s2.length()?s1:s2).get()&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;longestString&apos;&#x0A;- Destination method: &apos;programs_Java8.LongestStringFromGivenArray.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(inputString).reduce((s1,s2) -&gt; s1.length() &gt; s2.length()?s1:s2).get()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;longestString&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{LongestStringFromGivenArray.java" name="longestString" replace="true" selection="231 89" stamp="1710177095486" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Arrays.stream(numbers).boxed().map(s -&gt; s + &quot;&quot;).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;programs_Java8.FindElementsStartWith1.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(numbers).boxed().map(s -&gt; s + &quot;&quot;).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{FindElementsStartWith1.java" name="collect" replace="true" selection="291 75" stamp="1710177670018" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;asList&apos; from expression &apos;Arrays.asList(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;)&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;asList&apos;&#x0A;- Destination method: &apos;programs_Java8.StringJoinMethodDemo.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.asList(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;asList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{StringJoinMethodDemo.java" name="asList" replace="true" selection="131 35" stamp="1710177972937" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;join&apos; from expression &apos;String.join(&quot;-&quot;,asList)&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;join&apos;&#x0A;- Destination method: &apos;programs_Java8.StringJoinMethodDemo.main(...)&apos;&#x0A;- Variable expression: &apos;String.join(&quot;-&quot;,asList)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;join&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{StringJoinMethodDemo.java" name="join" replace="true" selection="218 25" stamp="1710178155538" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;rangeClosed&apos; from expression &apos;IntStream.rangeClosed(1,10)&apos;&#x0A;- Original project: &apos;JavaTechie_Java8Programs&apos;&#x0A;- Variable name: &apos;rangeClosed&apos;&#x0A;- Destination method: &apos;programs_Java8.SkipAndLimitMethodExample.main(...)&apos;&#x0A;- Variable expression: &apos;IntStream.rangeClosed(1,10)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;rangeClosed&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;programs_Java8{SkipAndLimitMethodExample.java" name="rangeClosed" replace="true" selection="146 29" stamp="1710178407143" varType="false" version="1.0"/>
</session>