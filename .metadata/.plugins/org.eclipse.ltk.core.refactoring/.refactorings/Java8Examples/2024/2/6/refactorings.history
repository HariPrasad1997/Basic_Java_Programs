<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;numbers.stream().filter(x -&gt; x % 2 == 0).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;java8.EvenAndOdd.main(...)&apos;&#x0A;- Variable expression: &apos;numbers.stream().filter(x -&gt; x % 2 == 0).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;java8{EvenAndOdd.java" name="collect" replace="true" selection="235 70" stamp="1707041132510" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;map.entrySet().stream().sorted((e1,e2) -&gt; {return e1.getValue() - e2.getValue();}).collect(Collectors.toMap(Map.Entry::getKey,Map.Entry::getValue,(e1,e2) -&gt; e1,LinkedHashMap::new))&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;java8.MapTest.main(...)&apos;&#x0A;- Variable expression: &apos;map.entrySet().stream().sorted((e1,e2) -&gt; {return e1.getValue() - e2.getValue();}).collect(Collectors.toMap(Map.Entry::getKey,Map.Entry::getValue,(e1,e2) -&gt; e1,LinkedHashMap::new))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;java8{MapTest.java" name="collect" replace="true" selection="305 200" stamp="1707044887370" varType="false" version="1.0"/>
</session>