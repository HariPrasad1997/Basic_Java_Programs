<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;ascendingOrder&apos; from expression &apos;names.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;ascendingOrder&apos;&#x0A;- Destination method: &apos;functionInterface.LambdaExample.main(...)&apos;&#x0A;- Variable expression: &apos;names.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;ascendingOrder&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;functionInterface{LambdaExample.java" name="ascendingOrder" replace="true" selection="511 53" stamp="1710579309087" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;descendingOrder&apos; from expression &apos;names.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;descendingOrder&apos;&#x0A;- Destination method: &apos;functionInterface.LambdaExample.main(...)&apos;&#x0A;- Variable expression: &apos;names.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;descendingOrder&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;functionInterface{LambdaExample.java" name="descendingOrder" replace="true" selection="637 78" stamp="1710579376322" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;fruits.stream().filter(a -&gt; a.startsWith(a.toUpperCase())).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;streams.StreamsExample.main(...)&apos;&#x0A;- Variable expression: &apos;fruits.stream().filter(a -&gt; a.startsWith(a.toUpperCase())).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streams{StreamsExample.java" name="collect" replace="true" selection="268 88" stamp="1710582554289" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;number&apos; from expression &apos;number.stream().map(a -&gt; a * a).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;number&apos;&#x0A;- Destination method: &apos;streams.StreamsExample.main(...)&apos;&#x0A;- Variable expression: &apos;number.stream().map(a -&gt; a * a).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;number&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;streams{StreamsExample.java" name="number" replace="true" selection="724 61" stamp="1710583977823" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;ascendingOrder&apos; from expression &apos;Arrays.stream(array).boxed().sorted()&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;ascendingOrder&apos;&#x0A;- Destination method: &apos;discussionsExample.StreamExample.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(array).boxed().sorted()&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;ascendingOrder&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;discussionsExample{StreamExample.java" name="ascendingOrder" replace="true" selection="184 38" stamp="1710610265601" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;descendingOrder&apos; from expression &apos;Arrays.stream(array).boxed().sorted(Comparator.reverseOrder()).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;descendingOrder&apos;&#x0A;- Destination method: &apos;discussionsExample.StreamExample.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(array).boxed().sorted(Comparator.reverseOrder()).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;descendingOrder&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;discussionsExample{StreamExample.java" name="descendingOrder" replace="true" selection="381 92" stamp="1710610520860" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;evenNumbers&apos; from expression &apos;numbers.stream().filter(a -&gt; a % 2 == 0).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;evenNumbers&apos;&#x0A;- Destination method: &apos;discussionsExample.StreamExample.main(...)&apos;&#x0A;- Variable expression: &apos;numbers.stream().filter(a -&gt; a % 2 == 0).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;evenNumbers&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;discussionsExample{StreamExample.java" name="evenNumbers" replace="true" selection="614 70" stamp="1710610924193" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;map&apos; from expression &apos;numbers.stream().map(a -&gt; a * 2).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;map&apos;&#x0A;- Destination method: &apos;discussionsExample.StreamExample.main(...)&apos;&#x0A;- Variable expression: &apos;numbers.stream().map(a -&gt; a * 2).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;map&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;discussionsExample{StreamExample.java" name="map" replace="true" selection="870 62" stamp="1710611328323" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;count&apos; from expression &apos;numbers.stream().count()&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;count&apos;&#x0A;- Destination method: &apos;discussionsExample.StreamExample.main(...)&apos;&#x0A;- Variable expression: &apos;numbers.stream().count()&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;count&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;discussionsExample{StreamExample.java" name="count" replace="true" selection="973 25" stamp="1710611422517" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;removeDuplicates&apos; from expression &apos;numbers.stream().distinct().collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;removeDuplicates&apos;&#x0A;- Destination method: &apos;discussionsExample.StreamExample.main(...)&apos;&#x0A;- Variable expression: &apos;numbers.stream().distinct().collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;removeDuplicates&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;discussionsExample{StreamExample.java" name="removeDuplicates" replace="true" selection="1050 57" stamp="1710611653139" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;numbers.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;discussionsExample.StreamExample.main(...)&apos;&#x0A;- Variable expression: &apos;numbers.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;discussionsExample{StreamExample.java" name="collect" replace="true" selection="1247 55" stamp="1710611874353" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect2&apos; from expression &apos;numbers.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;collect2&apos;&#x0A;- Destination method: &apos;discussionsExample.StreamExample.main(...)&apos;&#x0A;- Variable expression: &apos;numbers.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;discussionsExample{StreamExample.java" name="collect2" replace="true" selection="1404 80" stamp="1710611966709" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;sorted&apos; from expression &apos;map2.entrySet().stream().sorted()&apos;&#x0A;- Original project: &apos;Java8Examples&apos;&#x0A;- Variable name: &apos;sorted&apos;&#x0A;- Destination method: &apos;discussionsExample.StreamExample.main(...)&apos;&#x0A;- Variable expression: &apos;map2.entrySet().stream().sorted()&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;sorted&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;discussionsExample{StreamExample.java" name="sorted" replace="true" selection="1721 34" stamp="1710612196859" varType="true" version="1.0"/>
</session>