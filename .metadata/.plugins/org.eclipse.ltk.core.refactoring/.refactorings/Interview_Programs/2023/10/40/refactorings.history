<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;employees.stream().filter((highest) -&gt; highest.getSalary() == 40000).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Interview_Programs&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;java8Programs.FindingEmployeeWithHighestPaidSalary.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().filter((highest) -&gt; highest.getSalary() == 40000).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;java8Programs{FindingEmployeeWithHighestPaidSalary.java" name="collect" replace="true" selection="516 98" stamp="1696249699731" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect2&apos; from expression &apos;employees.stream().collect(Collectors.groupingBy(Employee::getDept,Collectors.reducing(BinaryOperator.maxBy(coparingBySalary))))&apos;&#x0A;- Original project: &apos;Interview_Programs&apos;&#x0A;- Variable name: &apos;collect2&apos;&#x0A;- Destination method: &apos;java8Programs.FindingEmployeeWithHighestPaidSalary.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().collect(Collectors.groupingBy(Employee::getDept,Collectors.reducing(BinaryOperator.maxBy(coparingBySalary))))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;java8Programs{FindingEmployeeWithHighestPaidSalary.java" name="collect2" replace="true" selection="808 137" stamp="1696250057476" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Arrays.stream(numbers).boxed().map(ele -&gt; ele + &quot;&quot;).filter(x -&gt; x.startsWith(&quot;2&quot;)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Interview_Programs&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;java8Programs.NumberStartsWithTwo.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(numbers).boxed().map(ele -&gt; ele + &quot;&quot;).filter(x -&gt; x.startsWith(&quot;2&quot;)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;java8Programs{NumberStartsWithTwo.java" name="collect" replace="true" selection="219 112" stamp="1696250695917" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;string&apos; from expression &apos;Arrays.stream(input).max(Comparator.comparing(String::length)).get()&apos;&#x0A;- Original project: &apos;Interview_Programs&apos;&#x0A;- Variable name: &apos;string&apos;&#x0A;- Destination method: &apos;java8Programs.FindingLongestStringInArray.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(input).max(Comparator.comparing(String::length)).get()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;string&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;java8Programs{FindingLongestStringInArray.java" name="string" replace="true" selection="250 69" stamp="1696251031929" varType="false" version="1.0"/>
</session>