<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;getAllStudents().stream().filter(student -&gt; student.getRank() &gt; 50 &amp;&amp; student.getRank() &lt; 100).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StudentsFilterAndSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().filter(student -&gt; student.getRank() &gt; 50 &amp;&amp; student.getRank() &lt; 100).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StudentsFilterAndSorting.java" name="collect" replace="true" selection="249 129" stamp="1709448909048" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect2&apos; from expression &apos;getAllStudents().stream().filter(student -&gt; student.getCity().equalsIgnoreCase(&quot;kadapa&quot;)).sorted(Comparator.comparing(Student::getName)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect2&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StudentsFilterAndSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().filter(student -&gt; student.getCity().equalsIgnoreCase(&quot;kadapa&quot;)).sorted(Comparator.comparing(Student::getName)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StudentsFilterAndSorting.java" name="collect2" replace="true" selection="538 171" stamp="1709449269535" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect3&apos; from expression &apos;getAllStudents().stream().sorted(Comparator.comparing(Student::getName)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect3&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StudentsFilterAndSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().sorted(Comparator.comparing(Student::getName)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect3&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StudentsFilterAndSorting.java" name="collect3" replace="true" selection="807 102" stamp="1709454062417" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect4&apos; from expression &apos;getAllStudents().stream().map(Student::getContacts).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect4&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StudentsFilterAndSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().map(Student::getContacts).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect4&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StudentsFilterAndSorting.java" name="collect4" replace="true" selection="995 81" stamp="1709454192259" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect5&apos; from expression &apos;getAllStudents().stream().collect(Collectors.groupingBy(Student::getGender))&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect5&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StudentsFilterAndSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().collect(Collectors.groupingBy(Student::getGender))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect5&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StudentsFilterAndSorting.java" name="collect5" replace="true" selection="1303 77" stamp="1709454369093" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;max&apos; from expression &apos;getAllStudents().stream().collect(Collectors.groupingBy(Student::getGender,Collectors.counting())).entrySet().stream().max(Map.Entry.comparingByKey())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;max&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StudentsFilterAndSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().collect(Collectors.groupingBy(Student::getGender,Collectors.counting())).entrySet().stream().max(Map.Entry.comparingByKey())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;max&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StudentsFilterAndSorting.java" name="max" replace="true" selection="1555 157" stamp="1709454624655" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect6&apos; from expression &apos;getAllStudents().stream().collect(Collectors.averagingInt(Student::getAge))&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect6&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StudentsFilterAndSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().collect(Collectors.averagingInt(Student::getAge))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect6&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StudentsFilterAndSorting.java" name="collect6" replace="true" selection="1891 76" stamp="1709454826949" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect7&apos; from expression &apos;getAllStudents().stream().collect(Collectors.groupingBy(Student::getDept,Collectors.minBy(Comparator.comparing(Student::getRank))))&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect7&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StudentsFilterAndSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().collect(Collectors.groupingBy(Student::getDept,Collectors.minBy(Comparator.comparing(Student::getRank))))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect7&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StudentsFilterAndSorting.java" name="collect7" replace="true" selection="2122 138" stamp="1709455239794" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;student&apos; from expression &apos;getAllStudents().stream().sorted(Comparator.comparing(Student::getRank)).skip(1).findFirst().get()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;student&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StudentsFilterAndSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().sorted(Comparator.comparing(Student::getRank)).skip(1).findFirst().get()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;student&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StudentsFilterAndSorting.java" name="student" replace="true" selection="2384 99" stamp="1709455436121" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;datePattern&apos; from expression &apos;TestFunctionalInterface.datePattern(&quot;yyyy-mm-dd&quot;)&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;datePattern&apos;&#x0A;- Destination method: &apos;com.harsha.java8.functionalInterface.PhonePay.doPayment(...)&apos;&#x0A;- Variable expression: &apos;TestFunctionalInterface.datePattern(&quot;yyyy-mm-dd&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;datePattern&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.functionalInterface{PhonePay.java" name="datePattern" replace="true" selection="174 50" stamp="1709835948902" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;datePattern&apos; from expression &apos;TestFunctionalInterface.datePattern(&quot;yyyy-MM-dd&quot;)&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;datePattern&apos;&#x0A;- Destination method: &apos;com.harsha.java8.functionalInterface.Paytm.doPayment(...)&apos;&#x0A;- Variable expression: &apos;TestFunctionalInterface.datePattern(&quot;yyyy-MM-dd&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;datePattern&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.functionalInterface{Paytm.java" name="datePattern" replace="true" selection="174 50" stamp="1709835996515" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;sorted&apos; from expression &apos;getAllEmployees().stream().sorted(Comparator.comparing(TestEmployee::getSalary).reversed())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;sorted&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.EmployeeSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllEmployees().stream().sorted(Comparator.comparing(TestEmployee::getSalary).reversed())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;sorted&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{EmployeeSorting.java" name="sorted" replace="true" selection="268 92" stamp="1709917227790" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;sum&apos; from expression &apos;Arrays.stream(integers).sum()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;sum&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.EmployeeSorting.main(...)&apos;&#x0A;- Variable expression: &apos;Arrays.stream(integers).sum()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;sum&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{EmployeeSorting.java" name="sum" replace="true" selection="526 30" stamp="1709918186986" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;getAllEmployees().stream().sorted(Comparator.comparing(TestEmployee::getSalary).reversed()).limit(3).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.EmployeeSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllEmployees().stream().sorted(Comparator.comparing(TestEmployee::getSalary).reversed()).limit(3).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{EmployeeSorting.java" name="collect" replace="true" selection="695 130" stamp="1709918488396" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect2&apos; from expression &apos;getAllEmployees().stream().sorted(Comparator.comparing(TestEmployee::getSalary).reversed()).skip(3).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect2&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.EmployeeSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllEmployees().stream().sorted(Comparator.comparing(TestEmployee::getSalary).reversed()).skip(3).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{EmployeeSorting.java" name="collect2" replace="true" selection="946 134" stamp="1709918773872" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;sorting&apos; from expression &apos;getAllEmployees().stream().sorted((o1,o2) -&gt; (int)(o1.getSalary() - o2.getSalary())).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;sorting&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.EmployeeSorting.main(...)&apos;&#x0A;- Variable expression: &apos;getAllEmployees().stream().sorted((o1,o2) -&gt; (int)(o1.getSalary() - o2.getSalary())).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;sorting&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{EmployeeSorting.java" name="sorting" replace="true" selection="521 121" stamp="1709919241906" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;allMatch&apos; from expression &apos;employees.stream().allMatch(a -&gt; a.getName().contains(&quot;Hari&quot;))&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;allMatch&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.AllFunctionsOfStreams.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().allMatch(a -&gt; a.getName().contains(&quot;Hari&quot;))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;allMatch&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{AllFunctionsOfStreams.java" name="allMatch" replace="true" selection="451 63" stamp="1709922004517" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;count&apos; from expression &apos;employees.stream().count()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;count&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.AllFunctionsOfStreams.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().count()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;count&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{AllFunctionsOfStreams.java" name="count" replace="true" selection="1744 27" stamp="1709922995650" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;distinct&apos; from expression &apos;employees.stream().distinct()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;distinct&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.AllFunctionsOfStreams.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().distinct()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;distinct&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{AllFunctionsOfStreams.java" name="distinct" replace="true" selection="1898 30" stamp="1709923144224" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;distinctNumbers&apos; from expression &apos;list.stream().distinct()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;distinctNumbers&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.AllFunctionsOfStreams.main(...)&apos;&#x0A;- Variable expression: &apos;list.stream().distinct()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;distinctNumbers&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{AllFunctionsOfStreams.java" name="distinctNumbers" replace="true" selection="2027 25" stamp="1709923389273" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;findAny&apos; from expression &apos;list.stream().findAny()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;findAny&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.AllFunctionsOfStreams.main(...)&apos;&#x0A;- Variable expression: &apos;list.stream().findAny()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;findAny&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{AllFunctionsOfStreams.java" name="findAny" replace="true" selection="2540 24" stamp="1709951870358" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;employee&apos; from expression &apos;employees.stream().findAny().get()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;employee&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.AllFunctionsOfStreams.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().findAny().get()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;employee&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{AllFunctionsOfStreams.java" name="employee" replace="true" selection="2739 35" stamp="1709952027168" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;filter&apos; from expression &apos;employees.stream().filter(emp -&gt; emp.getSalary() &gt; 2000).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;filter&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.AllFunctionsOfStreams.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().filter(emp -&gt; emp.getSalary() &gt; 2000).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;filter&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{AllFunctionsOfStreams.java" name="filter" replace="true" selection="2830 86" stamp="1709952462094" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;countBasedOnSalary&apos; from expression &apos;employees.stream().collect(Collectors.groupingBy(Employee::getSalary,Collectors.counting()))&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;countBasedOnSalary&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.AllFunctionsOfStreams.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().collect(Collectors.groupingBy(Employee::getSalary,Collectors.counting()))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;countBasedOnSalary&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{AllFunctionsOfStreams.java" name="countBasedOnSalary" replace="true" selection="3017 94" stamp="1709959467060" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;highestDSalary&apos; from expression &apos;employees.stream().filter(emp -&gt; emp.getSalary() &gt; 40000).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;highestDSalary&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.AllFunctionsOfStreams.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().filter(emp -&gt; emp.getSalary() &gt; 40000).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;highestDSalary&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{AllFunctionsOfStreams.java" name="highestDSalary" replace="true" selection="3193 87" stamp="1710002030292" varType="false" version="1.0"/>
</session>