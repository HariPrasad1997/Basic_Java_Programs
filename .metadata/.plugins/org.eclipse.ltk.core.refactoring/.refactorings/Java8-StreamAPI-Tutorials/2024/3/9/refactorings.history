<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;getAllStudents().stream().filter(student -&gt; student.getRank() &gt; 50 &amp;&amp; student.getRank() &lt; 100).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.harsha.java8.filter.FindTheStudentsBasedOnRank.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().filter(student -&gt; student.getRank() &gt; 50 &amp;&amp; student.getRank() &lt; 100).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.filter{FindTheStudentsBasedOnRank.java" name="collect" replace="true" selection="301 129" stamp="1709383915470" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect2&apos; from expression &apos;getAllStudents().stream().filter(city -&gt; city.getCity().equalsIgnoreCase(&quot;Karnataka&quot;)).sorted().collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect2&apos;&#x0A;- Destination method: &apos;com.harsha.java8.filter.FindTheStudentsBasedOnRank.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().filter(city -&gt; city.getCity().equalsIgnoreCase(&quot;Karnataka&quot;)).sorted().collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.filter{FindTheStudentsBasedOnRank.java" name="collect2" replace="true" selection="532 130" stamp="1709385291095" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect3&apos; from expression &apos;set.stream().sorted(Comparator.comparing(Student::getName)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect3&apos;&#x0A;- Destination method: &apos;com.harsha.java8.filter.FindTheStudentsBasedOnRank.main(...)&apos;&#x0A;- Variable expression: &apos;set.stream().sorted(Comparator.comparing(Student::getName)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect3&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.filter{FindTheStudentsBasedOnRank.java" name="collect3" replace="true" selection="804 89" stamp="1709385665335" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect3&apos; from expression &apos;getAllStudents().stream().map(student -&gt; student.getCity()).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect3&apos;&#x0A;- Destination method: &apos;com.harsha.java8.filter.FindTheStudentsBasedOnRank.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().map(student -&gt; student.getCity()).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect3&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.filter{FindTheStudentsBasedOnRank.java" name="collect3" replace="true" selection="827 89" stamp="1709397755004" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect4&apos; from expression &apos;getAllStudents().stream().map(contact -&gt; contact.getContact()).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect4&apos;&#x0A;- Destination method: &apos;com.harsha.java8.filter.FindTheStudentsBasedOnRank.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().map(contact -&gt; contact.getContact()).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect4&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.filter{FindTheStudentsBasedOnRank.java" name="collect4" replace="true" selection="1026 92" stamp="1709397977999" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect5&apos; from expression &apos;getAllStudents().stream().collect(Collectors.groupingBy(gen -&gt; gen.getGender()))&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect5&apos;&#x0A;- Destination method: &apos;com.harsha.java8.filter.FindTheStudentsBasedOnRank.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().collect(Collectors.groupingBy(gen -&gt; gen.getGender()))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect5&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.filter{FindTheStudentsBasedOnRank.java" name="collect5" replace="true" selection="1295 81" stamp="1709398495367" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect7&apos; from expression &apos;getAllStudents().stream().collect(Collectors.groupingBy(Student::getGender,Collectors.averagingInt(Student::getRank)))&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect7&apos;&#x0A;- Destination method: &apos;com.harsha.java8.filter.FindTheStudentsBasedOnRank.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().collect(Collectors.groupingBy(Student::getGender,Collectors.averagingInt(Student::getRank)))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect7&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.filter{FindTheStudentsBasedOnRank.java" name="collect7" replace="true" selection="1902 119" stamp="1709399481477" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect8&apos; from expression &apos;getAllStudents().stream().collect(Collectors.groupingBy(Student::getRank))&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect8&apos;&#x0A;- Destination method: &apos;com.harsha.java8.filter.FindTheStudentsBasedOnRank.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().collect(Collectors.groupingBy(Student::getRank))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect8&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.filter{FindTheStudentsBasedOnRank.java" name="collect8" replace="true" selection="2127 75" stamp="1709399695725" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect9&apos; from expression &apos;getAllStudents().stream().sorted(Comparator.comparing(Student::getRank)).skip(1).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect9&apos;&#x0A;- Destination method: &apos;com.harsha.java8.filter.FindTheStudentsBasedOnRank.main(...)&apos;&#x0A;- Variable expression: &apos;getAllStudents().stream().sorted(Comparator.comparing(Student::getRank)).skip(1).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect9&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.filter{FindTheStudentsBasedOnRank.java" name="collect9" replace="true" selection="2388 110" stamp="1709400387199" varType="false" version="1.0"/>
</session>