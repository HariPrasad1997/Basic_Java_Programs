<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;stream2&apos; from expression &apos;collection.stream()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;stream2&apos;&#x0A;- Destination method: &apos;com.harsha.java8.CreateStreamObjects.main(...)&apos;&#x0A;- Variable expression: &apos;collection.stream()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;stream2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{CreateStreamObjects.java" name="stream2" replace="true" selection="441 20" stamp="1708968804199" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;list.stream().sorted(Comparator.naturalOrder()).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;list.stream().sorted(Comparator.naturalOrder()).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StreamSorting.java" name="collect" replace="true" selection="284 80" stamp="1709045022581" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect2&apos; from expression &apos;list.stream().sorted((o1,o2) -&gt; o1.compareTo(o2)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect2&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;list.stream().sorted((o1,o2) -&gt; o1.compareTo(o2)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StreamSorting.java" name="collect2" replace="true" selection="471 79" stamp="1709045205374" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect2&apos; from expression &apos;list.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect2&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;list.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StreamSorting.java" name="collect2" replace="true" selection="510 52" stamp="1709045383241" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect4&apos; from expression &apos;list.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect4&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;list.stream().sorted(Comparator.reverseOrder()).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect4&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StreamSorting.java" name="collect4" replace="true" selection="862 77" stamp="1709045564089" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect5&apos; from expression &apos;list.stream().sorted((o1,o2) -&gt; o2.compareTo(o1)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect5&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;list.stream().sorted((o1,o2) -&gt; o2.compareTo(o1)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect5&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StreamSorting.java" name="collect5" replace="true" selection="1026 79" stamp="1709045664971" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect6&apos; from expression &apos;list.stream().sorted(Collections.reverseOrder()).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect6&apos;&#x0A;- Destination method: &apos;com.harsha.java8.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;list.stream().sorted(Collections.reverseOrder()).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect6&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8{StreamSorting.java" name="collect6" replace="true" selection="1282 78" stamp="1709050131947" varType="false" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;StreamSorting.java&apos; to &apos;Java8-StreamAPI-Tutorials/src/com.harsha.java8.sorting&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Destination element: &apos;Java8-StreamAPI-Tutorials/src/com.harsha.java8.sorting&apos;&#x0A;- Original element: &apos;com.harsha.java8.StreamSorting.java&apos;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;com.harsha.java8.sorting" element1="/src&lt;com.harsha.java8{StreamSorting.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1709050212987" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect7&apos; from expression &apos;employees.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect7&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect7&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{StreamSorting.java" name="collect7" replace="true" selection="1586 58" stamp="1709050651148" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect8&apos; from expression &apos;employees.stream().sorted((Employee e1,Employee e2) -&gt; (int)(e1.getSalary() - e2.getSalary())).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect8&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted((Employee e1,Employee e2) -&gt; (int)(e1.getSalary() - e2.getSalary())).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect8&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{StreamSorting.java" name="collect8" replace="true" selection="1901 125" stamp="1709052394300" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect9&apos; from expression &apos;employees.stream().sorted((e1,e2) -&gt; (int)(e1.getSalary() - e2.getSalary())).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect9&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted((e1,e2) -&gt; (int)(e1.getSalary() - e2.getSalary())).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect9&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{StreamSorting.java" name="collect9" replace="true" selection="2097 108" stamp="1709052653717" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect10&apos; from expression &apos;employees.stream().sorted(Comparator.comparingLong(Employee::getSalary)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect10&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted(Comparator.comparingLong(Employee::getSalary)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect10&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{StreamSorting.java" name="collect10" replace="true" selection="2274 102" stamp="1709052921856" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect11&apos; from expression &apos;employees.stream().sorted(Comparator.comparingLong(Employee::getSalary).reversed()).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect11&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted(Comparator.comparingLong(Employee::getSalary).reversed()).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect11&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{StreamSorting.java" name="collect11" replace="true" selection="2444 118" stamp="1709053121016" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect12&apos; from expression &apos;employees.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect12&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect12&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{StreamSorting.java" name="collect12" replace="true" selection="2635 57" stamp="1709053346325" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect13&apos; from expression &apos;employees.stream().sorted(Comparator.comparingInt(Employee::getAge)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect13&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted(Comparator.comparingInt(Employee::getAge)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect13&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{StreamSorting.java" name="collect13" replace="true" selection="2661 98" stamp="1709053539464" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect14&apos; from expression &apos;employees.stream().sorted(Comparator.comparingInt(Employee::getAge).reversed()).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect14&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted(Comparator.comparingInt(Employee::getAge).reversed()).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect14&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{StreamSorting.java" name="collect14" replace="true" selection="2860 109" stamp="1709053692676" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect15&apos; from expression &apos;employees.stream().sorted(Comparator.comparing(Employee::getName)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect15&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.StreamSorting.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted(Comparator.comparing(Employee::getName)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect15&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{StreamSorting.java" name="collect15" replace="true" selection="3040 96" stamp="1709053833584" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;employees.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.Demo.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted().collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{Demo.java" name="collect" replace="true" selection="265 57" stamp="1709128243020" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect2&apos; from expression &apos;employees.stream().sorted(Comparator.comparingLong(Employee::getSalary)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect2&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.Demo.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted(Comparator.comparingLong(Employee::getSalary)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{Demo.java" name="collect2" replace="true" selection="570 104" stamp="1709128889966" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect3&apos; from expression &apos;employees.stream().sorted((e1,e2) -&gt; (int)(e1.getSalary() - e2.getSalary())).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect3&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.Demo.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted((e1,e2) -&gt; (int)(e1.getSalary() - e2.getSalary())).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect3&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{Demo.java" name="collect3" replace="true" selection="835 106" stamp="1709129152487" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect4&apos; from expression &apos;employees.stream().sorted(Comparator.comparingLong(Employee::getSalary).reversed()).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect4&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.Demo.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted(Comparator.comparingLong(Employee::getSalary).reversed()).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect4&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{Demo.java" name="collect4" replace="true" selection="1041 113" stamp="1709129327342" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect5&apos; from expression &apos;employees.stream().sorted(Comparator.comparing(Employee::getName)).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect5&apos;&#x0A;- Destination method: &apos;com.harsha.java8.sorting.Demo.main(...)&apos;&#x0A;- Variable expression: &apos;employees.stream().sorted(Comparator.comparing(Employee::getName)).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect5&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.sorting{Demo.java" name="collect5" replace="true" selection="1299 96" stamp="1709129444051" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;list.stream().map(String::toUpperCase).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.harsha.java8.map.MapExampleUsingStreams.main(...)&apos;&#x0A;- Variable expression: &apos;list.stream().map(String::toUpperCase).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.map{MapExampleUsingStreams.java" name="collect" replace="true" selection="544 70" stamp="1709130082284" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect2&apos; from expression &apos;numbers.stream().map(x -&gt; x * 2).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect2&apos;&#x0A;- Destination method: &apos;com.harsha.java8.map.MapExampleUsingStreams.main(...)&apos;&#x0A;- Variable expression: &apos;numbers.stream().map(x -&gt; x * 2).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.map{MapExampleUsingStreams.java" name="collect2" replace="true" selection="721 60" stamp="1709130195438" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;allUsers&apos; from expression &apos;getAllUsers()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;allUsers&apos;&#x0A;- Destination method: &apos;com.harsha.java8.map.UserImpl.main(...)&apos;&#x0A;- Variable expression: &apos;getAllUsers()&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;allUsers&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.map{UserImpl.java" name="allUsers" replace="true" selection="154 14" stamp="1709130969020" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;allUsers.stream().map(user -&gt; new UserDTO(user.getId(),user.getUserName(),user.getEmail())).collect(Collectors.toList())&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;collect&apos;&#x0A;- Destination method: &apos;com.harsha.java8.map.UserImpl.main(...)&apos;&#x0A;- Variable expression: &apos;allUsers.stream().map(user -&gt; new UserDTO(user.getId(),user.getUserName(),user.getEmail())).collect(Collectors.toList())&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.map{UserImpl.java" name="collect" replace="true" selection="520 123" stamp="1709131311180" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;findFirst&apos; from expression &apos;numbers.stream().findFirst()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;findFirst&apos;&#x0A;- Destination method: &apos;com.harsha.java8.find.FindElementsExample.main(...)&apos;&#x0A;- Variable expression: &apos;numbers.stream().findFirst()&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;findFirst&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.find{FindElementsExample.java" name="findFirst" replace="true" selection="218 29" stamp="1709131879991" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;findAny&apos; from expression &apos;numbers.stream().findAny()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;findAny&apos;&#x0A;- Destination method: &apos;com.harsha.java8.find.FindElementsExample.main(...)&apos;&#x0A;- Variable expression: &apos;numbers.stream().findAny()&apos;&#x0A;- Replace occurrences of expression with variable&#x0A;- Declare variable type as &apos;var&apos;" description="Extract local variable &apos;findAny&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.find{FindElementsExample.java" name="findAny" replace="true" selection="435 27" stamp="1709132028070" varType="true" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;allPersons&apos; from expression &apos;getAllPersons()&apos;&#x0A;- Original project: &apos;Java8-StreamAPI-Tutorials&apos;&#x0A;- Variable name: &apos;allPersons&apos;&#x0A;- Destination method: &apos;com.harsha.java8.forEach.ListForEachExample.main(...)&apos;&#x0A;- Variable expression: &apos;getAllPersons()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;allPersons&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.harsha.java8.forEach{ListForEachExample.java" name="allPersons" replace="true" selection="315 16" stamp="1709140267616" varType="false" version="1.0"/>
</session>